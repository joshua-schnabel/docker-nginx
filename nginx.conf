user  www-data;
worker_processes  1;

error_log  /logs/error.log warn;
pid        /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections  1024;
        use epoll;
        multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[$time_iso8601] $remote_addr - $remote_user - "$host" "$request" $status body:$body_bytes_sent bytes "$http_referer" "$http_user_agent" prot:$scheme';

    access_log  /logs/access.log  main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 10000;
    types_hash_max_size 2048;
    server_tokens off;
	
	lua_load_resty_core off;

    gzip  off;

    #include /etc/nginx/conf.d/*.conf;

    ##
    # Open File Settings
    ##
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors off;
    fastcgi_max_temp_file_size 0;
    fastcgi_buffers 256 4k;

    ##
    # Client Settings
    ##

    client_body_buffer_size    128k;
    client_max_body_size       50m;
    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;
    output_buffers   1 32k;
    postpone_output  1460;

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout       3m;

    ##
    # Rate Limit
    ##

    limit_req_zone $binary_remote_addr zone=perip:10m rate=45r/m;
	
	
	include /etc/nginx/sites-enabled/*;
	
	server {
		listen          4444;
		listen          [::]:4444;
		server_name     localhost;

		
			location /health {
				# MIME type determined by default_type:
				default_type 'text/plain';

				content_by_lua_block {
					ngx.say('Nginx OK')
				}
			}
		}
}
